# https://conda.io/docs/user-guide/tasks/use-conda-with-travis-ci.html

language: python
python:
  - "3.5"
# command to install dependencies
install:
  - sudo apt-get update
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - conda create -q -n dev_env python=3.5
  - source activate dev_env
  - pip install --upgrade pip
  - pip install flask spotipy pandas numpy pytest
  - pip install -U scikit-learn
  - pip install --upgrade scikit-learn
  - pip freeze list 
# command to run tests

script:
  - python train.py


# pull docker image 
services:
  - docker


after_install:
  script:
  - docker pull yennanliu/spotify_rec_env:v1
  - docker ps -a
  - docker run yennanliu/spotify_rec_env:v1
  - docker images 
  - docker run --rm -v $PWD/spotify_recommend_playlist:/url  yennanliu/spotify_rec_env:v1  /bin/bash -c "git clone https://github.com/yennanliu/spotify_recommend_playlist.git ;  ls  ;  pwd ; export SPOTIPY_CLIENT_ID=<your_SPOTIPY_CLIENT_ID>; export SPOTIPY_CLIENT_SECRET=<your_SPOTIPY_CLIENT_SECRET>;  cd spotify_recommend_playlist &&  python server.py"








